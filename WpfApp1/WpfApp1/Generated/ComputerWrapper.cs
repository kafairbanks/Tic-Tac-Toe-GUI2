//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.12
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ComputerWrapper : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ComputerWrapper(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ComputerWrapper obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ComputerWrapper() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          cppPINVOKE.delete_ComputerWrapper(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
      global::System.GC.SuppressFinalize(this);
    }
  }

  public static SWIGTYPE_p_vectorT_vectorT_vectorT_char_t_t_t board {
    set {
      cppPINVOKE.ComputerWrapper_board_set(SWIGTYPE_p_vectorT_vectorT_vectorT_char_t_t_t.getCPtr(value));
      if (cppPINVOKE.SWIGPendingException.Pending) throw cppPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      SWIGTYPE_p_vectorT_vectorT_vectorT_char_t_t_t ret = new SWIGTYPE_p_vectorT_vectorT_vectorT_char_t_t_t(cppPINVOKE.ComputerWrapper_board_get(), true);
      if (cppPINVOKE.SWIGPendingException.Pending) throw cppPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public static SWIGTYPE_p_Computer computer {
    set {
      cppPINVOKE.ComputerWrapper_computer_set(SWIGTYPE_p_Computer.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = cppPINVOKE.ComputerWrapper_computer_get();
      SWIGTYPE_p_Computer ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_Computer(cPtr, false);
      return ret;
    } 
  }

  public int computerCall(SWIGTYPE_p_int returnMoves, int playerMove) {
    int ret = cppPINVOKE.ComputerWrapper_computerCall(swigCPtr, SWIGTYPE_p_int.getCPtr(returnMoves), playerMove);
    return ret;
  }

  public void resetComputer() {
    cppPINVOKE.ComputerWrapper_resetComputer(swigCPtr);
  }

  public ComputerWrapper() : this(cppPINVOKE.new_ComputerWrapper(), true) {
  }

}
